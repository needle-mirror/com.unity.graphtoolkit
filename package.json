{
  "name": "com.unity.graphtoolkit",
  "displayName": "Graph Toolkit",
  "version": "0.3.0-exp.1",
  "unity": "6000.2",
  "unityRelease": "0a9",
  "description": "The Graph Toolkit package provides a comprehensive set of APIs that developers can use to create graph editing tools. This framework allows you to create tailored, node-based workflows. It handles the foundational basics so you can spend less time on setup and more time building graph solutions.\n\nBy default any graph tools built with this package conform to Unity UI and UX standards, ensuring consistency and quality. However, there is also lots of room for customization to fit the needs of unique projects.",
  "dependencies": {
    "com.unity.modules.uielements": "1.0.0"
  },
  "relatedPackages": {
    "com.unity.graphtoolkit.tests": "0.3.0-exp.1"
  },
  "_upm": {
    "changelog": "### Added\n\n* Added a shortcut to collapse or expand the selected nodes. Default value: `Ctrl/Cmd + Shift + O`.\n* Added a shortcut Extract Contents To Placemat that applies on the selected subgraph. Default value: `Ctrl/Cmd + Shift + U`.\n* Added a shortcut to convert the selected wires to portals. Default value: `Ctrl + Shift + P`.\n* Added a default shortcut for toggling the Blackboard overlay on and off: B.\n* Added a default shortcut for toggling the Graph Inspector overlay on and off: `I`.\n* Added a default shortcut for toggling the Minimap overlay on and off: `M`.\n* Added a shortcut to delete all wires on a node. Default value: `Ctrl/Cmd + Shift + W`.\n\n### Changed\n\n* Minor tweaks to the layout of the graph inspector\n* Node Options are now defined via a builder, similar to ports.\n* Node outputs no longer have a dark background around them\n\n### Fixed\n\n* Fixed issue where port fields would not be updated if the port data type changed\n* MacOS: Shortcut `Convert Variable and Constant` is set to `Cmd + Shift + T`.\n* After creating a read or write graph variable in a subgraph the parent graph's subgraph node's ports will immediately be updated.\n* Removed border between inputs and outputs on context nodes\n* Fixed some layout issues in context nodes\n* In a Graph with two context types, the item library now show the correct block list for each context type.\n\n### Removed\n\n* Node Options can no longer include any attribute. Supported attributes are defined as builder methods (ex: `Delayed()`).\n* Node Options no longer have a parameter for `order`, their order is defined by the order they're defined in.\n* Additional CSS margin specific to 'execution flow' port labels. We no longer impose semantics (like 'execution flow') on ports."
  },
  "upmCi": {
    "footprint": "248c629f9ccb4ab33a6577088e5de1e535c68590"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.graphtoolkit@0.3/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/com.unity.motion.git",
    "type": "git",
    "revision": "672049ef668ec980e6d8488bc46181cd7076c4de"
  },
  "samples": [
    {
      "displayName": "TextureMaker Sample",
      "description": "A sample illustrating how to create a graph tool with basic texture generation",
      "path": "Samples~/TextureMaker"
    },
    {
      "displayName": "VisualNovelDirector Sample",
      "description": "This sample describes how to use Graph Toolkit with a custom runtime.",
      "path": "Samples~/VisualNovelDirector"
    }
  ]
}
